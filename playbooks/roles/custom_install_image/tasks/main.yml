---
# tasks file for custom_install_image

- name: check if src iso exists
  stat:
    path: "{{ custom_install_image_src_iso }}"
    get_checksum: no
    get_md5: no
    get_mime: no
    get_attributes: no
  register: custom_install_image_src_iso_stat

- name: fail if src iso doesn't exist
  fail:
    msg: "{{ custom_install_image_src_iso }} not found"
  when: not custom_install_image_src_iso_stat.stat.exists

- name: check if ks file exists
  stat:
    path: "{{ custom_install_image_ks_file }}"
    get_checksum: no
    get_md5: no
    get_mime: no
    get_attributes: no
  register: custom_install_image_ks_file_stat

- name: fail if ks file doesn't exist
  fail:
    msg: "{{ custom_install_image_ks_file }} not found"
  when: not custom_install_image_ks_file_stat.stat.exists

- name: install required packages
  package:
    name:
      - mkisofs
      - syslinux
      - isomd5sum
    state: present

- name: create temporary directory
  tempfile:
    state: directory
  register: custom_install_image_temp_dir
  notify: delete temporary directory

- name: create src_iso mount point
  file:
    state: directory
    path: "{{ custom_install_image_temp_dir.path }}/src_files"

- name: create dst_files build dir
  file:
    state: directory
    path: "{{ custom_install_image_temp_dir.path }}/dst_files"

- name: mount src_iso
  command: "mount -oloop,ro {{ custom_install_image_src_iso }} {{ custom_install_image_temp_dir.path }}/src_files"
  args:
    warn: false
  notify: unmount src_iso

- name: rsync src_files to dst_files
  synchronize:
    src: "{{ custom_install_image_temp_dir.path }}/src_files/"
    dest: "{{ custom_install_image_temp_dir.path }}/dst_files"

- name: copy ks file
  copy:
    src: "{{ custom_install_image_ks_file }}"
    dest: "{{ custom_install_image_temp_dir.path }}/dst_files/ks.cfg"

- name: copy grub.cfg
  template:
    src: files/grub.cfg.j2
    dest: "{{ custom_install_image_temp_dir.path }}/dst_files/EFI/BOOT/grub.cfg"

- name: copy isolinux.cfg
  template:
    src: files/isolinux.cfg.j2
    dest: "{{ custom_install_image_temp_dir.path }}/dst_files/isolinux/isolinux.cfg"
    
- name: create grub mod directory
  file:
    path: "{{ custom_install_image_temp_dir.path }}/dst_files/EFI/BOOT/x86_64-efi"
    state: directory

- name: copy grub mod
  copy:
    src: files/gfxterm_background.mod
    dest: "{{ custom_install_image_temp_dir.path }}/dst_files/EFI/BOOT/x86_64-efi/gfxterm_background.mod"

- name: copy splash screen
  copy:
    src: "{{ custom_install_image_splash_png }}"
    dest: "{{ custom_install_image_temp_dir.path }}/dst_files/isolinux/splash.png"
    
- name: create dst_iso
  command: >
    mkisofs -r -T -J -V '{{ custom_install_image_disk_label }}' -b isolinux/isolinux.bin -c isolinux/boot.cat 
    -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e images/efiboot.img -no-emul-boot 
    -o {{ custom_install_image_dst_iso }} {{ custom_install_image_temp_dir.path }}/dst_files

- name: make dst_iso hybrid
  command: "isohybrid {{ custom_install_image_dst_iso }}"

- name: update dst_iso md5 checksum
  command: "implantisomd5 {{ custom_install_image_dst_iso }}"

...